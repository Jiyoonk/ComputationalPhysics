//ex8_3 ans:e-1 trapezoidal rule N=2, 4, 8, ....
#include <stdio.h>
#include <math.h>
//#define N 2
double func(double x);
int main(){
        int i, N=1, k;
        double a=0.0, b=1.0, h, xkk, IN;
        double fkk, sum=0.0;
        //first sum should be zero      

        printf("a=%.1lf b=%.1lf\n", a, b);
        for(i=1; i<=10; i++){

                N=2*N;
                h=(b-a)/N;
                for (k=1; k<=N-1; k++){ //k=1, 2, ..., N-1
                xkk=xkk+h;// xkk=a+k*h also works but less simple
                fkk=func(xkk);//function value -> sum : step sequence matters           
                sum=sum+fkk;
                }
        IN=0.5*h*(func(a)+2*sum+func(b)); //trapezoidal rule
        printf("N=%d h=%.10lf IN=%.12lf\n", N, h, IN);
        sum=0.0; //sum should be zero, returned. 
        xkk=0.0; //xkk should be returned as a. for each loop   
        }

return 0;
}
double func(double x){
        double y;
        y=exp(x);
        return y;
}
