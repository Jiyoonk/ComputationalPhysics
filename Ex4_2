/*
Computational Physics Exercise #3 Problem 4
Computational Physics Exercise #4 Problem 2
..................................................................................
Declare two dimensional 4x4 array v of real variables and set v[i][j]=exp(ixj).
Get two m, n from the keyboard and print out v[m][n]. 
Note : gcc 4.c -lm -o 4 You should add option 
       You need to include <math.h>
..................................................................................
Hint : Set a function of exponential 
*/

//My answer
#include <stdio.h>
#include <math.h>
#define N 4
float func(int a, int b);
int main(){
        int i, j;

        float v[N][N]; // define array v
// before, for (i=0, j=0;....)
        for(i=0; i<N; i++){
        for(j=0; j<N; j++){
                v[i][j]=func(i, j);
        //      printf("v[%d][%d]=%f\n", i, j, v[i][j]);
        // you can print out matrix using for statement twice
        }
        }
        int m, n;
        scanf("%d %d", &m, &n);
        printf("v[%d][%d]=%f\n", m, n, func(m, n));

}
float func(int a, int b){
        float c;
        c=exp(a*b);
        return c;

}


//Other answers
#include <stdio.h>
#include <math.h>
#define N 4
// float func(int a, int b);
int main(){
        int i, j;

        float v[N][N]; // define array v

        for(i=0; i<N; i++){
        for(j=0; j<N; j++){
                v[i][j]=exp(i*j);
        //      printf("v[%d][%d]=%f\n", i, j, v[i][j]);
        // you can print out matrix using for statement twice
        }
        }
        int m, n;
        scanf("%d %d", &m, &n);
        printf("v[%d][%d]=%f\n", m, n, v[m][n]);

}
/* float func(int a, int b){
        float c;
        c=exp(a*b);
        return c;

}
*/
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                  
